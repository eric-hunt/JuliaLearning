[
  {
    "objectID": "notebooks/reading_FASTX_files/reading_FASTX_files.html",
    "href": "notebooks/reading_FASTX_files/reading_FASTX_files.html",
    "title": "Reading FASTA and FASTQ files",
    "section": "",
    "text": "using FASTX"
  },
  {
    "objectID": "notebooks/reading_FASTX_files/reading_FASTX_files.html#the-problem",
    "href": "notebooks/reading_FASTX_files/reading_FASTX_files.html#the-problem",
    "title": "Reading FASTA and FASTQ files",
    "section": "The problem",
    "text": "The problem\nUhh.. well.. my problem. Someone out there understands all this perfectly. 😆\nUsing the FASTA/FASTQ.Reader structs from FASTX.jl1, which wrap around an IO, has been confusing me – particularly because the do block syntax makes things less straighforward to immediately understand.\nBelow is a typical do block for using Base.open by dispatching the method:\nopen(f::Function, args...; kwargs...)\nThe docs for this method state:\n\nApply the function f to the result of open(args…; kwargs…) and close the resulting file descriptor upon completion.\n\nSo let’s open an example FASTA file and see what we get:\n\nexample_file = open(\"example.fasta\", \"r\") do io\n    FASTAReader(io)\nend\n\nFASTX.FASTA.Reader{TranscodingStreams.NoopStream{IOStream}}(TranscodingStreams.NoopStream{IOStream}(&lt;mode=idle&gt;), 1, 1, nothing, FASTX.FASTA.Record:\n  description: \"\"\n     sequence: \"\", true)\n\n\nWe get a FASTX.FASTA.Reader (FASTAReader) with a NoopStream IO stream type. Sweet. I’d love to tell you exactly what this means, but I don’t really know. I think it means that the IO stream was present, but the do block dispatch of the Base.open method shown above closed it before we really did anything with it, so now we have a placeholder “no-operation” stream that essentially produces nothing.\nLooking into the FASTX.jl docs2 they say:\n\nReaders and writers take control over the underlying IO, and manipulating the IO underneath a Reader/Writer, e.g. by flushing or closing it, cause them to behave in an undefined manner.\nClosing readers/writers closes the underlying IO. Because they carry their own buffers, it’s important to remember to close writers in particular, else the results may not be fully written to the file.\n\n\nReaders are iterables of Record.\n\nSo can we do something like this..?\n\nfor record in example_file\n    @show record\nend\n\n..alas, no, because the Reader IO was closed and there aren’t any records in an no-op stream. 🫥\nSomewhat related – and also probably indicative of my technical understanding or lack thereof – you can’t reopen or initiate the no-op stream to iterate through records because, perhaps unsurprisingly, there is no open method to dispatch on type ::FASTX.FASTA.Reader{TranscodingStreams.NoopStream{IOStream}}.\n\nbegin\n    io = open(example_file)\n    for record in io\n        @show record\n    end\n    close(io)\nend\n\nLoadError: \n\u001b[2m\u001b[31m────────────────────────────────── \u001b[22m\u001b[1m\u001b[31mMethodError\u001b[22m\u001b[22m\u001b[39m\u001b[2m\u001b[31m \u001b[2m\u001b[31m─────────────────────────────────\u001b[22m\u001b[39m\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m╭──── \u001b[22m\u001b[1m\u001b[38;2;255;138;79mError Stack\u001b[22m\u001b[22m\u001b[39m\u001b[2m\u001b[38;2;255;138;79m\u001b[2m\u001b[38;2;255;138;79m ─────────────────────────────────────────────────────────────╮\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[0m\u001b[38;2;155;179;224m╭───────────────────────────────────────────────────────────╮\u001b[39m\u001b[0m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[38;2;155;179;224m│\u001b[39m  \u001b[38;2;242;215;119mstart_task\u001b[39m                                               \u001b[38;2;155;179;224m│\u001b[39m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[38;2;155;179;224m│\u001b[39m   \u001b[22m\u001b[1m\u001b[2mfrom C\u001b[22m\u001b[22m\u001b[22m                                                  \u001b[38;2;155;179;224m│\u001b[39m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(1)\u001b[22m \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4m/Users/hunt/.julia/juliaup/julia-1.9.0+0.x64.app\u001b[24m\u001b[22m         \u001b[38;2;155;179;224m│\u001b[39m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4mle.darwin14/lib/julia/libjulia-internal.1.9.dyli\u001b[24m\u001b[22m         \u001b[38;2;155;179;224m│\u001b[39m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4mb:-1\u001b[22m\u001b[24m                                                     \u001b[38;2;155;179;224m│\u001b[39m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m         \u001b[38;2;155;179;224m╰───────────────────────────────────────────── \u001b[37mTOP LEVEL\u001b[39m\u001b[38;2;155;179;224m\u001b[38;2;155;179;224m ───╯\u001b[39m\u001b[0m\u001b[39m\u001b[0m        \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m       \u001b[38;2;155;179;224m                      Skipped \u001b[1m1\u001b[22m frame                        \u001b[39m          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;236;64;122m─────────────────────────── \u001b[22m\u001b[37mIn module \u001b[1m\u001b[38;2;236;64;122mIJulia\u001b[22m\u001b[39m\u001b[22m\u001b[37m\u001b[22m\u001b[39m\u001b[2m\u001b[38;2;236;64;122m \u001b[2m\u001b[38;2;236;64;122m───────────────────────────\u001b[22m\u001b[39m\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(3)\u001b[22m    (\u001b[38;2;206;147;216m::IJulia.var\u001b[39m\"#15#18\")()                                          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m             \u001b[22m\u001b[1m\u001b[2mfrom C\u001b[22m\u001b[22m\u001b[22m                                                           \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(4)\u001b[22m    (\u001b[38;2;206;147;216m::IJulia.var\u001b[39m\"#15#18\")()                                          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m            \u001b[2m\u001b[4m./task.jl:514\u001b[22m\u001b[24m                                                     \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m       \u001b[38;2;155;179;224m                  Skipped \u001b[1m3\u001b[22m frames in \u001b[38;2;236;64;122mBase\u001b[39m                   \u001b[39m          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m            \u001b[38;2;242;215;119mexecute_request\u001b[39m(socket\u001b[38;2;206;147;216m::ZMQ.Socket\u001b[39m, msg\u001b[38;2;206;147;216m::IJulia.M\u001b[39m                 \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(8)\u001b[22m    \u001b[38;2;206;147;216msg\u001b[39m)                                                               \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m             \u001b[22m\u001b[1m\u001b[2mfrom C\u001b[22m\u001b[22m\u001b[22m                                                           \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m            \u001b[38;2;242;215;119mexecute_request\u001b[39m(socket\u001b[38;2;206;147;216m::ZMQ.Socket\u001b[39m, msg\u001b[38;2;206;147;216m::IJulia.M\u001b[39m                 \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m            \u001b[38;2;206;147;216msg\u001b[39m)                                                               \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m            \u001b[2m\u001b[4m/Users/hunt/.julia/packages/IJulia/Vo51o/src/exe\u001b[24m\u001b[22m                  \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(9)\u001b[22m    \u001b[2m\u001b[4mcute_request.jl:67\u001b[22m\u001b[24m                                                \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m              \u001b[2m│ \u001b[22m\u001b[0m\u001b[2m╭─────────────────────────────────────╮\u001b[22m\u001b[0m                       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m              \u001b[2m╰─\u001b[22m\u001b[2m│\u001b[22m\u001b[1m\u001b[31m❯\u001b[22m\u001b[39m \u001b[37m67\u001b[39m \u001b[38;2;232;212;114moccursin\u001b[39m\u001b[38;2;227;136;100m(\u001b[39m\u001b[38;2;222;222;222mmagics_regex\u001b[39m\u001b[38;2;227;136;100m,\u001b[39m\u001b[38;2;222;222;222m \u001b[39m\u001b[38;2;222;222;222mcode\u001b[39m\u001b[38;2;227;136;100m)\u001b[39m\u001b[38;2;222;222;222m\u001b[39m... \u001b[2m│\u001b[22m                       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                \u001b[0m\u001b[2m╰─────────────────────────────────────╯\u001b[22m\u001b[0m\u001b[0m                       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m       \u001b[38;2;155;179;224m                      Skipped \u001b[1m1\u001b[22m frame                        \u001b[39m          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;236;64;122m─────────────────────── \u001b[22m\u001b[37mIn module \u001b[1m\u001b[38;2;236;64;122mSoftGlobalScope\u001b[22m\u001b[39m\u001b[22m\u001b[37m\u001b[22m\u001b[39m\u001b[2m\u001b[38;2;236;64;122m \u001b[2m\u001b[38;2;236;64;122m──────────────────────\u001b[22m\u001b[39m\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m             \u001b[38;2;242;215;119msoftscope_include_string\u001b[39m(m\u001b[38;2;206;147;216m::Module\u001b[39m, code\u001b[38;2;206;147;216m::String\u001b[39m,                \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m              filename\u001b[38;2;206;147;216m::String\u001b[39m)                                               \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m             \u001b[2m\u001b[4m/Users/hunt/.julia/packages/SoftGlobalScope/u4Uz\u001b[24m\u001b[22m                 \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(11)\u001b[22m    \u001b[2m\u001b[4mH/src/SoftGlobalScope.jl:65\u001b[22m\u001b[24m                                      \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m               \u001b[2m│ \u001b[22m\u001b[0m\u001b[2m╭──────────────────────────────────────╮\u001b[22m\u001b[0m                     \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m               \u001b[2m╰─\u001b[22m\u001b[2m│\u001b[22m\u001b[1m\u001b[31m❯\u001b[22m\u001b[39m \u001b[37m65\u001b[39m \u001b[38;2;232;212;114msoftscope_include_string\u001b[39m\u001b[38;2;227;136;100m(\u001b[39m\u001b[38;2;222;222;222mm\u001b[39m\u001b[38;2;222;109;89m::\u001b[39m\u001b[38;2;222;222;222mM\u001b[39m... \u001b[2m│\u001b[22m                     \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                 \u001b[0m\u001b[2m╰──────────────────────────────────────╯\u001b[22m\u001b[0m\u001b[0m                     \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m       \u001b[38;2;155;179;224m                  Skipped \u001b[1m7\u001b[22m frames in \u001b[38;2;236;64;122mBase\u001b[39m                   \u001b[39m          \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;155;179;224m────────────────────────────────────────────────────────────────────────\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m  \u001b[2m\u001b[38;2;236;64;122m──────────────────────────── \u001b[22m\u001b[37mIn module \u001b[1m\u001b[38;2;236;64;122mBase\u001b[22m\u001b[39m\u001b[22m\u001b[37m\u001b[22m\u001b[39m\u001b[2m\u001b[38;2;236;64;122m \u001b[2m\u001b[38;2;236;64;122m────────────────────────────\u001b[22m\u001b[39m\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m    \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[0m\u001b[38;2;155;179;224m╭───────────────────────────────────────────────────────────╮\u001b[39m\u001b[0m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[38;2;155;179;224m│\u001b[39m  \u001b[38;2;242;215;119mjl_method_error_bare\u001b[39m                                     \u001b[38;2;155;179;224m│\u001b[39m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[38;2;155;179;224m│\u001b[39m   \u001b[22m\u001b[1m\u001b[2mfrom C\u001b[22m\u001b[22m\u001b[22m                                                  \u001b[38;2;155;179;224m│\u001b[39m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m     \u001b[2m(19)\u001b[22m \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4m/Users/hunt/.julia/juliaup/julia-1.9.0+0.x64.app\u001b[24m\u001b[22m         \u001b[38;2;155;179;224m│\u001b[39m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4mle.darwin14/lib/julia/libjulia-internal.1.9.dyli\u001b[24m\u001b[22m         \u001b[38;2;155;179;224m│\u001b[39m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[38;2;155;179;224m│\u001b[39m  \u001b[2m\u001b[4mb:-1\u001b[22m\u001b[24m                                                     \u001b[38;2;155;179;224m│\u001b[39m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m          \u001b[38;2;155;179;224m╰──────────────────────────────────────────── \u001b[1m\u001b[37mERROR LINE\u001b[22m\u001b[39m\u001b[38;2;155;179;224m\u001b[38;2;155;179;224m ───╯\u001b[39m\u001b[0m\u001b[39m\u001b[0m       \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[38;2;255;138;79m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[38;2;255;138;79m╰──── \u001b[22m\u001b[1m\u001b[38;2;255;138;79mError Stack\u001b[22m\u001b[22m\u001b[39m\u001b[2m\u001b[38;2;255;138;79m\u001b[2m\u001b[38;2;255;138;79m ─────────────────────────────────────────────────────────────╯\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m\u001b[0m\n\u001b[2m\u001b[31m╭───────────────────────────────── \u001b[0m\u001b[22m\u001b[1m\u001b[4m\u001b[31mMethodError\u001b[22m\u001b[22m\u001b[24m\u001b[39m\u001b[2m\u001b[31m ────────────────────────────────╮\u001b[22m\u001b[39m\u001b[0m\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m  MethodError: no method matching open(\u001b[38;2;206;147;216m::FASTX.FASTA.Reader\u001b[39m)                  \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m  Closest candidates are:                                                     \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m    open(\u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Function\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Base.AbstractCmd\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Any...\u001b[39m;    \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m   kwargs...)                                                                 \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m     @ Base process.jl:\u001b[38;2;144;202;249m414\u001b[39m                                                    \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m    open(\u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Function\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Type\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Any...\u001b[39m) where          \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m  T&lt;\u001b[38;2;255;167;38m:TranscodingStreams\u001b[39m.TranscodingStream                                     \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m     @ TranscodingStreams \u001b[38;2;239;83;80m~\u001b[39m\u001b[38;2;239;83;80m/\u001b[39m.julia\u001b[38;2;239;83;80m/\u001b[39mpackages\u001b[38;2;239;83;80m/\u001b[39mTranscodingStreams\u001b[38;2;239;83;80m/\u001b[39m\u001b[38;2;144;202;249m2\u001b[39mMcN2\u001b[38;2;239;83;80m/\u001b[39msrc\u001b[38;2;239;83;80m/\u001b[39ms    \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m  tream.jl:\u001b[38;2;144;202;249m171\u001b[39m                                                                \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m    open(\u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Function\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Type\u001b[39m, \u001b[38;2;239;83;80m!\u001b[39mMatched\u001b[38;2;206;147;216m::Any...\u001b[39m; kwargs...)     \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m  where T&lt;\u001b[38;2;255;167;38m:BioGenerics\u001b[39m.IO.AbstractFormattedIO                                 \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m     @ BioGenerics \u001b[38;2;239;83;80m~\u001b[39m\u001b[38;2;239;83;80m/\u001b[39m.julia\u001b[38;2;239;83;80m/\u001b[39mpackages\u001b[38;2;239;83;80m/\u001b[39mBioGenerics\u001b[38;2;239;83;80m/\u001b[39m\u001b[38;2;144;202;249m1\u001b[39md69j\u001b[38;2;239;83;80m/\u001b[39msrc\u001b[38;2;239;83;80m/\u001b[39mIO.jl:\u001b[38;2;144;202;249m54\u001b[39m           \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m    ...                                                                       \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[2m\u001b[31m│\u001b[22m\u001b[39m                                                                              \u001b[2m\u001b[31m│\u001b[22m\u001b[39m\n\u001b[0m\u001b[2m\u001b[31m╰──────────────────────────────────────────────────────────────────────────────╯\u001b[22m\u001b[39m\u001b[0m\u001b[0m"
  },
  {
    "objectID": "notebooks/reading_FASTX_files/reading_FASTX_files.html#the-solution",
    "href": "notebooks/reading_FASTX_files/reading_FASTX_files.html#the-solution",
    "title": "Reading FASTA and FASTQ files",
    "section": "The solution",
    "text": "The solution\nInstead, you must open the IO stream, iterate through the FASTA.Records (FASTARecords) while the Reader has control of the underlying IO, and then close it.\n\nbegin\n    reader = FASTAReader(open(\"example.fasta\"))\n    record = first(reader)\n    println(typeof(record))\n    @show record # using FASTX.jl Base.show(io::IO, record::Record) method\n    @show sequence(record) # field accessor for FASTARecord\n    close(reader)\nend\n\nFASTX.FASTA.Record\nrecord = FASTX.FASTA.Record:\n  description: \"human\"\n     sequence: \"ACCGTGATGTAGAGACCACGGGCCC\"\nsequence(record) = \"ACCGTGATGTAGAGACCACGGGCCC\"\n\n\nThis is why the do block syntax works..\n\nopen(FASTAReader, \"example.fasta\") do reader\n    for record in reader\n        @show record\n    end\nend\n\nrecord = FASTX.FASTA.Record:\n  description: \"human\"\n     sequence: \"ACCGTGATGTAGAGACCACGGGCCC\"\nrecord = FASTX.FASTA.Record:\n  description: \"mouse\"\n     sequence: \"CCCAGTGTGTAACA\"\nrecord = FASTX.FASTA.Record:\n  description: \"cat\"\n     sequence: \"AGTGTGTGTTGTGCCCG\"\n\n\nYou’re dispatching on the open(f::Function, args...; kwargs...) method twice:\n\nYou dispatch Base.open as open(f::Function, args...; kwargs...) with the do block syntax which passes an anonymous function (the control flow for loop) back as the first argument.\nNext, the anonymous function is applied to dispactching Base.open on the args...; kwargs... part, for which the first argument is another function, the FASTAReader constructor. So you end up dipatching the same open(f::Function, args...; kwargs...) method again.\nFinally, that FASTAReader constructor is applied to dispatching Base.open (in the same manner as above) on the args...; kwargs... part, which is now just open([file]), and the FASTAReader takes control of that underlying IO stream.\n\nI’ve tried to further demonstrate this by creating an anonymous iterator instead:\n\nopen(\n    reader -&gt; for record in reader\n        @show record\n    end,\n    FASTAReader,\n    \"example.fasta\"\n)\n\nrecord = FASTX.FASTA.Record:\n  description: \"human\"\n     sequence: \"ACCGTGATGTAGAGACCACGGGCCC\"\nrecord = FASTX.FASTA.Record:\n  description: \"mouse\"\n     sequence: \"CCCAGTGTGTAACA\"\nrecord = FASTX.FASTA.Record:\n  description: \"cat\"\n     sequence: \"AGTGTGTGTTGTGCCCG\""
  },
  {
    "objectID": "notebooks/reading_FASTX_files/reading_FASTX_files.html#summary",
    "href": "notebooks/reading_FASTX_files/reading_FASTX_files.html#summary",
    "title": "Reading FASTA and FASTQ files",
    "section": "Summary",
    "text": "Summary\nSo to put it all together, you might do something like this:\n\nbegin\n    records = Vector{FASTARecord}()\n\n    open(FASTAReader, \"example.fasta\") do reader\n        for record in reader\n            push!(records, record)\n        end\n    end\n\n    records\nend\n\n\n╭─────────────────────────────────────────╮\n│                                         │\n│     (1)   &gt;human                        │\n│           ACCGTGATGTAGAGACCACGGGCCC     │\n│     (2)   &gt;mouse                        │\n│           CCCAGTGTGTAACA                │\n│     (3)   &gt;cat                          │\n│           AGTGTGTGTTGTGCCCG             │\n│                                         │\n│                                         │\n╰───────────────────────────── 3 items ───╯\n\n\n\n\nNow we can access each record as a vector element:\n\n[1:length(records) .=&gt; description.(records)]\n\n\n╭────────────────────────────────────────────────────────────────────╮\n│                                                                    │\n│     (1)   Pair{Int64, StringViews.StringView{SubArray{UInt8, 1, Vector, Tuple, true} }[1 =&gt; \"human\", 2 =&gt; \"mouse\", 3 =&gt; \"cat\"]...... │\n│                                                                    │\n│                                                                    │\n│                                                                    │\n│                                                                    │\n╰──────────────────────────────────────────────────────── 1 items ───╯\n\n\n\n\n\nrecords[1]\n\nFASTX.FASTA.Record:\n  description: \"human\"\n     sequence: \"ACCGTGATGTAGAGACCACGGGCCC\""
  },
  {
    "objectID": "notebooks/reading_FASTX_files/reading_FASTX_files.html#closing-footnotes",
    "href": "notebooks/reading_FASTX_files/reading_FASTX_files.html#closing-footnotes",
    "title": "Reading FASTA and FASTQ files",
    "section": "Closing & Footnotes",
    "text": "Closing & Footnotes\nI hope this helps other folks who might be struggling to wrap their minds around what is happening when they read FASTX files with this nice BioJulia package."
  }
]